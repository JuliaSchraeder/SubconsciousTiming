#Load in library
library(lme4) # mixed
library(lmerTest) #to get p values
library(ggplot2) # graphics
library(interactions) 
library(tidyverse) # needed for data manipulation.#needed to view data
library(jtools)  # post hoc tests
library(readxl) # to import dataset
library(ggplot2) # graphics

#Load in dataset
data<- read_excel()
View(data)
data$TMT <- (data$TMT_A+data$TMT_B)/2
par(mfrow=c(2, 2))

#Plot Data
#Accuracy and BDI
plot1<-ggplot(data  = data,
       aes(x = ScoreBDI,
           y = accuracy,
           col = Sex,
           group = Sex))+ #to add the colours for different responses))+
  geom_point(size = 1.2,
             alpha = .8,
             position = "jitter")+
  theme_minimal()+
  geom_smooth(method = lm,
              se     = FALSE,
              size   = 1.5, 
              alpha  = .8)+ # to add regression line
  labs(title = "Accuracy dependent on BDI")

#Accuracy and BVAQ
plot2<-ggplot(data  = data,
       aes(x = ScoreBVAQ_B,
           y = accuracy,
           col = Sex,
           group = Sex))+ #to add the colours for different responses))+
  geom_point(size = 1.2,
             alpha = .8,
             position = "jitter")+
  theme_minimal()+
  geom_smooth(method = lm,
              se     = FALSE,
              size   = 1.5, 
              alpha  = .8)+ # to add regression line
  labs(title = "Accuracy dependent on BVAQ")

#Accuracy and TMT
plot3<-ggplot(data  = data,
       aes(x = TMT,
           y = accuracy,
           col = Sex,
           group = Sex))+ #to add the colours for different responses))+
  geom_point(size = 1.2,
             alpha = .8,
             position = "jitter")+
  theme_minimal()+
  geom_smooth(method = lm,
              se     = FALSE,
              size   = 1.5, 
              alpha  = .8)+ # to add regression line
  labs(title = "Accuracy dependent on TMT")



library(gridExtra)
grid.arrange(plot1, plot2,plot3, ncol=3)


par(mfrow=c(1, 2))
plot4<-boxplot(accuracy~Sex , data=data, col="lightblue",ylim=c(0,100), ylab = "Mean Accuracy")
plot5<-boxplot(mean_reaction_time~Sex , data=data, col="lightblue",ylim=c(0,1.5),ylab = "Mean Reactiontime")

t.test(data$accuracy~data$Sex)
t.test(data$mean_reaction_time~data$Sex)

#View(data)
a <- data$accuracy
plot(density(a),main="Density estimate of data")

#QQ Plot

z.norm<-(a-mean(a))/sd(a) ## standardized data
qqnorm(z.norm) ## drawing the QQplot
abline(0,1) ## drawing a 45-degree reference line




#Fit distributions
library(fitdistrplus)

plot.legend <- c("Weibull", "Gamma","Normal","logNorm")
fit.weibull <- fitdist(a, "weibull")
fit.normal <- fitdist(a,"norm")
fit.gamma <- fitdist(a, "gamma", lower = c(0, 0))
fit.lnorm<- fitdist(a, "lnorm")

par(mfrow=c(2, 2))
denscomp(list(fit.weibull, fit.gamma, fit.normal, fit.lnorm), fitcol = c("red", "green","lightblue", "blue"), legendtext = plot.legend)
qqcomp(list(fit.weibull,fit.gamma,fit.normal,fit.lnorm))
cdfcomp(list(fit.weibull,fit.gamma,fit.normal,fit.lnorm))
ppcomp(list(fit.weibull,fit.gamma,fit.normal,fit.lnorm))




###########################################################
data<- read_excel()
data$TMT <- (data$TMT_A+data$TMT_B)/2

# Define variables
data$SERIAL<- as.factor(data$SERIAL)
#data$Age<- as.factor(data$Age)
#data$Sex<- as.factor(data$Sex)


#Questionnaires
TMT <- standardize(data$TMT)
BDI <- standardize(data$ScoreBDI)
BVAQ <- standardize(data$ScoreBVAQ_B)
#BVAQ.z <- data$ScoreBVAQ_B/sd(data$ScoreBVAQ_B) # z transformation
View(data)

################  Modelle rechnen #########################


Model1 <- glmer (accuracy ~ TMT * BDI * BVAQ * 
                   (1|SERIAL),
                 data=data,
                 family = Gamma(link = "inverse"))

Model2 <- glmer (accuracy ~ TMT * BDI * BVAQ * Sex +
                   (1|SERIAL) ,
                 data=data,
                 family = Gamma(link = "inverse"))

Model3 <- glmer (accuracy ~ TMT + BDI + BVAQ + Sex +
                   (1|SERIAL),
                 data=data,
                 family = Gamma(link = "inverse"))

anova(Model1,Model2,Model3)

#Plot interaction 
interact_plot(Model2,pred=TMT,modx=Sex)
interact_plot(Model2,pred=BDI,modx=Sex)
interact_plot(Model2,pred=BVAQ,modx=Sex)

summary(Model3)
print(Model3, corr=F)



